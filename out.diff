diff --git a/bloom-lens-code b/bloom-lens-code
index 885f14d..3a6b86a 100644
--- a/bloom-lens-code
+++ b/bloom-lens-code
@@ -6,6 +6,8 @@
 // @input Component.Text successText
 // @input Component.Text failText
 // @input Component.Image retryButton
+// @input Component.Text tapInstructionText
+// @input Component.Image endingScreen
 
 var flowerObjects = [script.flower1, script.flower2, script.flower3, script.flower4];
 var currentFlowerObj = null;
@@ -14,6 +16,7 @@ var stopped = false;
 var gameOver = false;
 var failed = false; // Track if the game failed (to show retry option)
 var celebrating = false; // Track if we're in celebration mode
+var gameStarted = false; // Track if the game has started
 
 // Game progression
 var currentFlower = 1; // Current flower number (1-4)
@@ -24,6 +27,7 @@ var speedIncrement = 0.05; // Speed increase per flower
 // Movement settings
 var dropSpeed = 10;
 var groundY = -200;
+var vaseRimY = -100; // Height where failed flowers stop (higher than groundY)
 
 // Pendulum settings
 var pivotY = -1500; // Y position of the pivot point (much further down, ~2.7x lower than -150)
@@ -34,8 +38,8 @@ var currentAngle = -maxAngle; // Start at left side
 var angleDirection = 1; // 1 for clockwise, -1 for counter-clockwise
 
 // Vase detection settings (middle 1/3 of screen)
-var vaseLeftBound = -50; // Approximate left edge of vase (middle 1/3)
-var vaseRightBound = 50; // Approximate right edge of vase (middle 1/3)
+var vaseLeftBound = -40; // Approximate left edge of vase (reduced from -50)
+var vaseRightBound = 40; // Approximate right edge of vase (reduced from 50)
 
 // Celebration dance settings
 var celebrationFlowers = []; // Flowers that are dancing
@@ -65,6 +69,13 @@ function initializeUI() {
     if (script.successText) script.successText.enabled = false;
     if (script.failText) script.failText.enabled = false;
     if (script.retryButton) script.retryButton.enabled = false;
+    if (script.endingScreen) script.endingScreen.enabled = false;
+    
+    // Show tap instruction at the beginning
+    if (script.tapInstructionText && !gameStarted) {
+        script.tapInstructionText.text = "Tap!";
+        script.tapInstructionText.enabled = true;
+    }
 }
 
 // Update swing speed based on current flower
@@ -96,6 +107,7 @@ function resetGame() {
     gameOver = false;
     failed = false;
     celebrating = false;
+    gameStarted = false; // Reset game started flag
     currentFlower = 1; // Reset to first flower
     currentAngle = -maxAngle;
     angleDirection = 1;
@@ -116,7 +128,7 @@ function resetGame() {
     // Reset flower position
     resetFlowerPosition();
     
-    // Hide UI elements
+    // Hide UI elements (this will show tap instruction)
     initializeUI();
 }
 
@@ -211,7 +223,7 @@ function showSuccess() {
         if (currentFlower < totalFlowers) {
             script.successText.text = "Yayy~";
         } else {
-            script.successText.text = "All Done! ðŸŒ¸ðŸŒ¸ðŸŒ¸ðŸŒ¸";
+            script.successText.text = "All Done!ðŸª»âœ¨";
         }
         script.successText.enabled = true;
     }
@@ -228,12 +240,19 @@ function showSuccess() {
         });
         delayedEvent.reset(2.0); // 2 second delay
     } else {
-        // All flowers completed - start celebration after 2 seconds
-        var celebrationEvent = script.createEvent("DelayedCallbackEvent");
-        celebrationEvent.bind(function() {
+        // All flowers completed - show ending screen after 2 seconds
+        var endingEvent = script.createEvent("DelayedCallbackEvent");
+        endingEvent.bind(function() {
+            // Hide success message
+            if (script.successText) script.successText.enabled = false;
+            // Show ending screen
+            if (script.endingScreen) {
+                script.endingScreen.enabled = true;
+            }
+            // Start celebration dance
             startCelebration();
         });
-        celebrationEvent.reset(2.0);
+        endingEvent.reset(2.0);
     }
 }
 
@@ -289,19 +308,26 @@ function onUpdate(eventData) {
         // Drop vertically
         pos.y -= dropSpeed;
 
-        if (pos.y <= groundY) {
+        // Check if flower is in vase area during drop
+        var inVaseArea = checkLanding(pos.x);
+        
+        if (inVaseArea && pos.y <= groundY) {
+            // Success: flower lands in vase (goes all the way down)
             pos.y = groundY;
             isDropping = false;
             stopped = true;
             gameOver = true;
             
-            // Check if flower landed in vase
-            if (checkLanding(pos.x)) {
-                // Keep the flower in the vase (don't hide it)
-                showSuccess();
-            } else {
-                showFailure();
-            }
+            // Keep the flower in the vase (don't hide it)
+            showSuccess();
+        } else if (!inVaseArea && pos.y <= vaseRimY) {
+            // Failure: flower hits vase rim/edge (stops higher)
+            pos.y = vaseRimY;
+            isDropping = false;
+            stopped = true;
+            gameOver = true;
+            
+            showFailure();
         }
     }
     
@@ -313,9 +339,20 @@ setCurrentFlower(); // Set first flower
 updateSwingSpeed(); // Set initial speed
 initializeUI();
 
+// Explicitly hide ending screen at start
+if (script.endingScreen) {
+    script.endingScreen.enabled = false;
+}
+
 script.createEvent("UpdateEvent").bind(onUpdate);
 
 script.createEvent("TapEvent").bind(function () {
+    // Hide tap instruction on first tap
+    if (!gameStarted && script.tapInstructionText) {
+        script.tapInstructionText.enabled = false;
+        gameStarted = true;
+    }
+    
     if (celebrating) {
         // During celebration, tap resets the entire game
         if (script.retryButton && script.retryButton.enabled) {
@@ -339,7 +376,7 @@ script.createEvent("TapEvent").bind(function () {
         // Reset flower position
         resetFlowerPosition();
         
-        // Hide UI elements
+        // Hide UI elements (including ending screen)
         initializeUI();
         return;
     }
